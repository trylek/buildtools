<Project ToolsVersion="12.0" DefaultTargets="PublishOutputLeg" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <_TaskDir>$(MSBuildThisFileDirectory)net46/</_TaskDir>
    <_TaskDir Condition="'$(MSBuildRuntimeType)' == 'Core'">$(MSBuildThisFileDirectory)netstandard1.5/</_TaskDir>
  </PropertyGroup>
  <UsingTask TaskName="PushToBlobFeed" AssemblyFile="$(_TaskDir)Microsoft.DotNet.Build.Tasks.Feed.dll"/>
  <UsingTask TaskName="ConfigureInputFeeds" AssemblyFile="$(_TaskDir)Microsoft.DotNet.Build.Tasks.Feed.dll"/>
  
    <ItemGroup Condition="'$(ItemsToPushGlobPattern)' != ''">
      <ItemsToPush Include="$(ItemsToPushGlobPattern)" />
    </ItemGroup>

    <!-- This is the standard publish target. It can be used to publish assets for the intermediate output of individual build legs and
         the finalized output of an official build. 
         ExpectedFeedUrl - The url of the nuget feed you would like to generate (should contain the storage account, container and relative path) and end with index.json
         AccountKey - The access key from your Azure storage account 
         ItemsToPush - items to publish to feed
         
         Optional parameters:
         IndexDirectory - the directory in which the temporary index.json files live
         PublishFlatContainer - push without generating the feed useful for flat assets like installers
         Overwrite - Allow overwrite, will skip if file already exists when false

        PublishDependsOn can be customized at build time on the commandline to determine the pre steps required to publish 
    -->

    <Target Name="PublishOutputLeg" DependsOnTargets="@(PublishDependsOn)" >
      <Error Text="The ExpectedFeedUrl  property must be set on the command line."  
            Condition="'$(ExpectedFeedUrl)' == ''" />  
      <Error Text="The AccountKey property must be set on the command line."  
            Condition="'$(AccountKey)' == ''" />
      
      <Message Importance="High" Text="Publish to container started" />
      <PushToBlobFeed ExpectedFeedUrl="$(ExpectedFeedUrl)"
                      AccountKey="$(AccountKey)"
                      ItemsToPush="@(ItemsToPush)"

                      Overwrite="$(Overwrite)" />
    </Target>

  <!-- This is the target used to configure feeds for restore. It can be used to specify the sources from which you would restore your packages from.
       Parameters to specify:
       EnableFeeds - ItemGroup which contains sources which are allowed
      ConfigureInputDependsOn can be customized at build time on the commandline to determine the pre steps required
  -->

  <Target Name="ConfigureInputFeeds" DependsOnTargets="@(ConfigureInputDependsOn)" >
    <Error Text="The EnableFeeds ItemGroup must be set on the command line."  
           Condition="'@(EnableFeeds)' == ''" />

    <Message Importance="High" Text="Configuring input feeds started" />
    <ConfigureInputFeed EnableFeeds="@(EnableFeeds)" />
  </Target>
</Project>